// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Port
{
    [PortResourceType("port:index/action:Action")]
    public partial class Action : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identifier of the blueprint
        /// </summary>
        [Output("blueprintIdentifier")]
        public Output<string> BlueprintIdentifier { get; private set; } = null!;

        /// <summary>
        /// The description of the action
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The icon of the action
        /// </summary>
        [Output("icon")]
        public Output<string?> Icon { get; private set; } = null!;

        /// <summary>
        /// The identifier of the action
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// The methods the action is dispatched in. Supports WEBHOOK, KAFKA and GITHUB
        /// </summary>
        [Output("invocationMethod")]
        public Output<Outputs.ActionInvocationMethod> InvocationMethod { get; private set; } = null!;

        /// <summary>
        /// The display name of the action
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;

        /// <summary>
        /// The type of the action, one of CREATE, DAY-2, DELETE
        /// </summary>
        [Output("trigger")]
        public Output<string> Trigger { get; private set; } = null!;

        /// <summary>
        /// The input properties of the action
        /// </summary>
        [Output("userProperties")]
        public Output<ImmutableArray<Outputs.ActionUserProperty>> UserProperties { get; private set; } = null!;


        /// <summary>
        /// Create a Action resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Action(string name, ActionArgs args, CustomResourceOptions? options = null)
            : base("port:index/action:Action", name, args ?? new ActionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Action(string name, Input<string> id, ActionState? state = null, CustomResourceOptions? options = null)
            : base("port:index/action:Action", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-port-labs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Action resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Action Get(string name, Input<string> id, ActionState? state = null, CustomResourceOptions? options = null)
        {
            return new Action(name, id, state, options);
        }
    }

    public sealed class ActionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the blueprint
        /// </summary>
        [Input("blueprintIdentifier", required: true)]
        public Input<string> BlueprintIdentifier { get; set; } = null!;

        /// <summary>
        /// The description of the action
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The icon of the action
        /// </summary>
        [Input("icon")]
        public Input<string>? Icon { get; set; }

        /// <summary>
        /// The identifier of the action
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// The methods the action is dispatched in. Supports WEBHOOK, KAFKA and GITHUB
        /// </summary>
        [Input("invocationMethod", required: true)]
        public Input<Inputs.ActionInvocationMethodArgs> InvocationMethod { get; set; } = null!;

        /// <summary>
        /// The display name of the action
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        /// <summary>
        /// The type of the action, one of CREATE, DAY-2, DELETE
        /// </summary>
        [Input("trigger", required: true)]
        public Input<string> Trigger { get; set; } = null!;

        [Input("userProperties")]
        private InputList<Inputs.ActionUserPropertyArgs>? _userProperties;

        /// <summary>
        /// The input properties of the action
        /// </summary>
        public InputList<Inputs.ActionUserPropertyArgs> UserProperties
        {
            get => _userProperties ?? (_userProperties = new InputList<Inputs.ActionUserPropertyArgs>());
            set => _userProperties = value;
        }

        public ActionArgs()
        {
        }
        public static new ActionArgs Empty => new ActionArgs();
    }

    public sealed class ActionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the blueprint
        /// </summary>
        [Input("blueprintIdentifier")]
        public Input<string>? BlueprintIdentifier { get; set; }

        /// <summary>
        /// The description of the action
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The icon of the action
        /// </summary>
        [Input("icon")]
        public Input<string>? Icon { get; set; }

        /// <summary>
        /// The identifier of the action
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// The methods the action is dispatched in. Supports WEBHOOK, KAFKA and GITHUB
        /// </summary>
        [Input("invocationMethod")]
        public Input<Inputs.ActionInvocationMethodGetArgs>? InvocationMethod { get; set; }

        /// <summary>
        /// The display name of the action
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// The type of the action, one of CREATE, DAY-2, DELETE
        /// </summary>
        [Input("trigger")]
        public Input<string>? Trigger { get; set; }

        [Input("userProperties")]
        private InputList<Inputs.ActionUserPropertyGetArgs>? _userProperties;

        /// <summary>
        /// The input properties of the action
        /// </summary>
        public InputList<Inputs.ActionUserPropertyGetArgs> UserProperties
        {
            get => _userProperties ?? (_userProperties = new InputList<Inputs.ActionUserPropertyGetArgs>());
            set => _userProperties = value;
        }

        public ActionState()
        {
        }
        public static new ActionState Empty => new ActionState();
    }
}
