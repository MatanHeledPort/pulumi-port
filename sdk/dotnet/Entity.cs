// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Port
{
    [PortResourceType("port:index/entity:Entity")]
    public partial class Entity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The blueprint identifier the entity relates to
        /// </summary>
        [Output("blueprint")]
        public Output<string> Blueprint { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The identifier of the entity
        /// </summary>
        [Output("identifier")]
        public Output<string?> Identifier { get; private set; } = null!;

        /// <summary>
        /// The metadata of the entity
        /// </summary>
        [Output("properties")]
        public Output<ImmutableArray<Outputs.EntityProperty>> Properties { get; private set; } = null!;

        /// <summary>
        /// The other entities that are connected
        /// </summary>
        [Output("relations")]
        public Output<ImmutableArray<Outputs.EntityRelation>> Relations { get; private set; } = null!;

        /// <summary>
        /// The runID of the action run that created the entity
        /// </summary>
        [Output("runId")]
        public Output<string?> RunId { get; private set; } = null!;

        /// <summary>
        /// The team related to the entity
        /// </summary>
        [Output("team")]
        public Output<string?> Team { get; private set; } = null!;

        /// <summary>
        /// The teams related to the entity
        /// </summary>
        [Output("teams")]
        public Output<ImmutableArray<string>> Teams { get; private set; } = null!;

        /// <summary>
        /// The display name of the entity
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        [Output("updatedBy")]
        public Output<string> UpdatedBy { get; private set; } = null!;


        /// <summary>
        /// Create a Entity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Entity(string name, EntityArgs args, CustomResourceOptions? options = null)
            : base("port:index/entity:Entity", name, args ?? new EntityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Entity(string name, Input<string> id, EntityState? state = null, CustomResourceOptions? options = null)
            : base("port:index/entity:Entity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-port-labs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Entity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Entity Get(string name, Input<string> id, EntityState? state = null, CustomResourceOptions? options = null)
        {
            return new Entity(name, id, state, options);
        }
    }

    public sealed class EntityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The blueprint identifier the entity relates to
        /// </summary>
        [Input("blueprint", required: true)]
        public Input<string> Blueprint { get; set; } = null!;

        /// <summary>
        /// The identifier of the entity
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        [Input("properties", required: true)]
        private InputList<Inputs.EntityPropertyArgs>? _properties;

        /// <summary>
        /// The metadata of the entity
        /// </summary>
        public InputList<Inputs.EntityPropertyArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.EntityPropertyArgs>());
            set => _properties = value;
        }

        [Input("relations")]
        private InputList<Inputs.EntityRelationArgs>? _relations;

        /// <summary>
        /// The other entities that are connected
        /// </summary>
        public InputList<Inputs.EntityRelationArgs> Relations
        {
            get => _relations ?? (_relations = new InputList<Inputs.EntityRelationArgs>());
            set => _relations = value;
        }

        /// <summary>
        /// The runID of the action run that created the entity
        /// </summary>
        [Input("runId")]
        public Input<string>? RunId { get; set; }

        /// <summary>
        /// The team related to the entity
        /// </summary>
        [Input("team")]
        public Input<string>? Team { get; set; }

        [Input("teams")]
        private InputList<string>? _teams;

        /// <summary>
        /// The teams related to the entity
        /// </summary>
        public InputList<string> Teams
        {
            get => _teams ?? (_teams = new InputList<string>());
            set => _teams = value;
        }

        /// <summary>
        /// The display name of the entity
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public EntityArgs()
        {
        }
        public static new EntityArgs Empty => new EntityArgs();
    }

    public sealed class EntityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The blueprint identifier the entity relates to
        /// </summary>
        [Input("blueprint")]
        public Input<string>? Blueprint { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The identifier of the entity
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        [Input("properties")]
        private InputList<Inputs.EntityPropertyGetArgs>? _properties;

        /// <summary>
        /// The metadata of the entity
        /// </summary>
        public InputList<Inputs.EntityPropertyGetArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.EntityPropertyGetArgs>());
            set => _properties = value;
        }

        [Input("relations")]
        private InputList<Inputs.EntityRelationGetArgs>? _relations;

        /// <summary>
        /// The other entities that are connected
        /// </summary>
        public InputList<Inputs.EntityRelationGetArgs> Relations
        {
            get => _relations ?? (_relations = new InputList<Inputs.EntityRelationGetArgs>());
            set => _relations = value;
        }

        /// <summary>
        /// The runID of the action run that created the entity
        /// </summary>
        [Input("runId")]
        public Input<string>? RunId { get; set; }

        /// <summary>
        /// The team related to the entity
        /// </summary>
        [Input("team")]
        public Input<string>? Team { get; set; }

        [Input("teams")]
        private InputList<string>? _teams;

        /// <summary>
        /// The teams related to the entity
        /// </summary>
        public InputList<string> Teams
        {
            get => _teams ?? (_teams = new InputList<string>());
            set => _teams = value;
        }

        /// <summary>
        /// The display name of the entity
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        public EntityState()
        {
        }
        public static new EntityState Empty => new EntityState();
    }
}
