// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.port.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ActionUserProperty {
    private @Nullable String blueprint;
    private @Nullable String default_;
    private @Nullable List<String> defaultItems;
    private @Nullable String description;
    private @Nullable List<String> enums;
    private @Nullable String format;
    private String identifier;
    private @Nullable String pattern;
    private @Nullable Boolean required;
    private String title;
    private String type;

    private ActionUserProperty() {}
    public Optional<String> blueprint() {
        return Optional.ofNullable(this.blueprint);
    }
    public Optional<String> default_() {
        return Optional.ofNullable(this.default_);
    }
    public List<String> defaultItems() {
        return this.defaultItems == null ? List.of() : this.defaultItems;
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public List<String> enums() {
        return this.enums == null ? List.of() : this.enums;
    }
    public Optional<String> format() {
        return Optional.ofNullable(this.format);
    }
    public String identifier() {
        return this.identifier;
    }
    public Optional<String> pattern() {
        return Optional.ofNullable(this.pattern);
    }
    public Optional<Boolean> required() {
        return Optional.ofNullable(this.required);
    }
    public String title() {
        return this.title;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActionUserProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String blueprint;
        private @Nullable String default_;
        private @Nullable List<String> defaultItems;
        private @Nullable String description;
        private @Nullable List<String> enums;
        private @Nullable String format;
        private String identifier;
        private @Nullable String pattern;
        private @Nullable Boolean required;
        private String title;
        private String type;
        public Builder() {}
        public Builder(ActionUserProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blueprint = defaults.blueprint;
    	      this.default_ = defaults.default_;
    	      this.defaultItems = defaults.defaultItems;
    	      this.description = defaults.description;
    	      this.enums = defaults.enums;
    	      this.format = defaults.format;
    	      this.identifier = defaults.identifier;
    	      this.pattern = defaults.pattern;
    	      this.required = defaults.required;
    	      this.title = defaults.title;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder blueprint(@Nullable String blueprint) {
            this.blueprint = blueprint;
            return this;
        }
        @CustomType.Setter("default")
        public Builder default_(@Nullable String default_) {
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder defaultItems(@Nullable List<String> defaultItems) {
            this.defaultItems = defaultItems;
            return this;
        }
        public Builder defaultItems(String... defaultItems) {
            return defaultItems(List.of(defaultItems));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enums(@Nullable List<String> enums) {
            this.enums = enums;
            return this;
        }
        public Builder enums(String... enums) {
            return enums(List.of(enums));
        }
        @CustomType.Setter
        public Builder format(@Nullable String format) {
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            this.identifier = Objects.requireNonNull(identifier);
            return this;
        }
        @CustomType.Setter
        public Builder pattern(@Nullable String pattern) {
            this.pattern = pattern;
            return this;
        }
        @CustomType.Setter
        public Builder required(@Nullable Boolean required) {
            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ActionUserProperty build() {
            final var o = new ActionUserProperty();
            o.blueprint = blueprint;
            o.default_ = default_;
            o.defaultItems = defaultItems;
            o.description = description;
            o.enums = enums;
            o.format = format;
            o.identifier = identifier;
            o.pattern = pattern;
            o.required = required;
            o.title = title;
            o.type = type;
            return o;
        }
    }
}
