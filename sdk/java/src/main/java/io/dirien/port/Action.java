// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.port;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.port.ActionArgs;
import io.dirien.port.Utilities;
import io.dirien.port.inputs.ActionState;
import io.dirien.port.outputs.ActionInvocationMethod;
import io.dirien.port.outputs.ActionUserProperty;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="port:index/action:Action")
public class Action extends com.pulumi.resources.CustomResource {
    /**
     * The identifier of the blueprint
     * 
     */
    @Export(name="blueprintIdentifier", refs={String.class}, tree="[0]")
    private Output<String> blueprintIdentifier;

    /**
     * @return The identifier of the blueprint
     * 
     */
    public Output<String> blueprintIdentifier() {
        return this.blueprintIdentifier;
    }
    /**
     * The description of the action
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the action
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The icon of the action
     * 
     */
    @Export(name="icon", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> icon;

    /**
     * @return The icon of the action
     * 
     */
    public Output<Optional<String>> icon() {
        return Codegen.optional(this.icon);
    }
    /**
     * The identifier of the action
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return The identifier of the action
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * The methods the action is dispatched in. Supports WEBHOOK, KAFKA and GITHUB
     * 
     */
    @Export(name="invocationMethod", refs={ActionInvocationMethod.class}, tree="[0]")
    private Output<ActionInvocationMethod> invocationMethod;

    /**
     * @return The methods the action is dispatched in. Supports WEBHOOK, KAFKA and GITHUB
     * 
     */
    public Output<ActionInvocationMethod> invocationMethod() {
        return this.invocationMethod;
    }
    /**
     * The display name of the action
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output<String> title;

    /**
     * @return The display name of the action
     * 
     */
    public Output<String> title() {
        return this.title;
    }
    /**
     * The type of the action, one of CREATE, DAY-2, DELETE
     * 
     */
    @Export(name="trigger", refs={String.class}, tree="[0]")
    private Output<String> trigger;

    /**
     * @return The type of the action, one of CREATE, DAY-2, DELETE
     * 
     */
    public Output<String> trigger() {
        return this.trigger;
    }
    /**
     * The input properties of the action
     * 
     */
    @Export(name="userProperties", refs={List.class,ActionUserProperty.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ActionUserProperty>> userProperties;

    /**
     * @return The input properties of the action
     * 
     */
    public Output<Optional<List<ActionUserProperty>>> userProperties() {
        return Codegen.optional(this.userProperties);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Action(String name) {
        this(name, ActionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Action(String name, ActionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Action(String name, ActionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("port:index/action:Action", name, args == null ? ActionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Action(String name, Output<String> id, @Nullable ActionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("port:index/action:Action", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Action get(String name, Output<String> id, @Nullable ActionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Action(name, id, state, options);
    }
}
