// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.port.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlueprintMirrorPropertyArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlueprintMirrorPropertyArgs Empty = new BlueprintMirrorPropertyArgs();

    @Import(name="identifier", required=true)
    private Output<String> identifier;

    public Output<String> identifier() {
        return this.identifier;
    }

    @Import(name="path", required=true)
    private Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    @Import(name="title")
    private @Nullable Output<String> title;

    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private BlueprintMirrorPropertyArgs() {}

    private BlueprintMirrorPropertyArgs(BlueprintMirrorPropertyArgs $) {
        this.identifier = $.identifier;
        this.path = $.path;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlueprintMirrorPropertyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlueprintMirrorPropertyArgs $;

        public Builder() {
            $ = new BlueprintMirrorPropertyArgs();
        }

        public Builder(BlueprintMirrorPropertyArgs defaults) {
            $ = new BlueprintMirrorPropertyArgs(Objects.requireNonNull(defaults));
        }

        public Builder identifier(Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public BlueprintMirrorPropertyArgs build() {
            $.identifier = Objects.requireNonNull($.identifier, "expected parameter 'identifier' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
